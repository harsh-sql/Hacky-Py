# -*- coding: utf-8 -*-
"""Multiple_Linear_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XuASYFUNRjF10PS0_u4lMkv7tKer9W1h

# Multiple Linear Regression

>  How to use Multiple Linear Regression.

## 0.Data Preprocessing

### 0.1 Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""### 0.2 Importing the dataset"""

dataset = pd.read_csv('50_Startups.csv')
dataset

"""### 0.3 Check if any null value"""

dataset.isna().sum()

dataset.info()

### 0.4 Split into X & y

X = dataset.drop('Profit', axis=1)
X

y = dataset['Profit']
y



"""### 0.5 Encoding categorical data"""

from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import MinMaxScaler
from sklearn import preprocessing
import pandas as pd

 
categorical_feature = ["State"]
one_hot = OneHotEncoder()
transformer = ColumnTransformer([("one_hot",
                                  one_hot,
                                  categorical_feature)],
                                 remainder="passthrough")

transformed_X = transformer.fit_transform(X)

scaler = preprocessing.MinMaxScaler()
names = scaler.fit_transformed_X

print=(names)



pd.DataFrame(transformed_X).head()

"""### 0.6 Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split 
X_train, X_test, y_train, y_test = train_test_split(transformed_X, y, test_size = 0.25, random_state = 259)



X_train.size, X_test.size, y_train.size, y_test.size

"""## 1. Training the Multiple Linear Regression model on the Training set"""

X_train,X_test, y_train, y_test

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

"""### 1.1 Score"""

regressor.score(X_test,y_test)

"""## 2. Predicting the Test set results"""

y_pred = regressor.predict(X_test)

d = {'y_pred': y_pred, 'y_test': y_test}

"""### 2.1 Compare Predicted results"""

pd.DataFrame(d)